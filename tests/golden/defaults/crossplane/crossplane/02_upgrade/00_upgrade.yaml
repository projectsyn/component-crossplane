apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    name: crossplane-crd-upgrade
  name: crossplane-crd-upgrade
  namespace: syn-crossplane
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - patch
  - apiGroups:
      - pkg.crossplane.io
    resources:
      - locks
    verbs:
      - get
      - patch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    name: crossplane-crd-upgrade
  name: crossplane-crd-upgrade
  namespace: syn-crossplane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    name: crossplane-crd-upgrade
  name: crossplane-crd-upgrade
  namespace: syn-crossplane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crossplane-crd-upgrade
subjects:
  - kind: ServiceAccount
    name: crossplane-crd-upgrade
    namespace: syn-crossplane
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    name: crossplane-crd-upgrade
  name: crossplane-crd-upgrade
  namespace: syn-crossplane
spec:
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        name: crossplane-crd-upgrade
    spec:
      containers:
        - args:
            - -eu
            - -c
            - "#!/bin/bash\nset -e\n\n#Patch CRDS so that ArgoCD does not delete them\
              \ during upgrade\nfor crd in $CRDS_TO_PATCH; do\n\t  exists=$(kubectl\
              \ get crd \"${crd}\" --ignore-not-found)\n    if [ -z \"$exists\" ];\
              \ then\n      >&2 echo \"WARNING: Skipping '${crd}': not found.\"\n\
              \      continue\n    fi\n    #Remove ArgoCD managed-by label from the\
              \ CRD\n    kubectl label crd \"${crd}\" argocd.argoproj.io/instance-\n\
              done\n\n#Patch Locks so that ArgoCD does not delete them during upgrade\n\
              for lock in $(kubectl get locks -o name); do\n    #Remove ArgoCD managed-by\
              \ label from the Lock\n    kubectl label \"$lock\" argocd.argoproj.io/instance-\n\
              done\n"
          command:
            - sh
          env:
            - name: CRDS_TO_PATCH
              value: compositeresourcedefinitions.apiextensions.crossplane.io providerrevisions.pkg.crossplane.io
                configurationrevisions.pkg.crossplane.io controllerconfigs.pkg.crossplane.io
                configurations.pkg.crossplane.io locks.pkg.crossplane.io compositions.apiextensions.crossplane.io
                providers.pkg.crossplane.io
            - name: HOME
              value: /upgrade
          image: docker.io/bitnami/kubectl:1.21.2@sha256:a6c97fa2af65cf390447d96e7d0ca04f2d8c5035a50e62e1bc6b9eac28c3f576
          imagePullPolicy: IfNotPresent
          name: crossplane-crd-upgrade
          ports: []
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /upgrade
              name: upgrade
      imagePullSecrets: []
      initContainers: []
      restartPolicy: OnFailure
      serviceAccountName: crossplane-crd-upgrade
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: upgrade
